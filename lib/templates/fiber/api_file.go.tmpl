// Code generated by goge; DO NOT EDIT.
// More info: github.com/xehrad/goge

package {{ .LibName }}

import (
    "github.com/gofiber/fiber/v2"
    {{ range .ExtraImports }}
    {{ if .Alias }}{{ .Alias }} {{ end }}"{{ .Path }}"
    {{ end }}
)

func GogeRouter(app *fiber.App) {
    // Swagger endpoints
    app.Add("GET", "/swagger", SwaggerUIHandler)
    app.Add("GET", "/swagger.json", SwaggerJSONHandler)

    // API endpoints
    {{- range .APIs }}
    app.Add("{{ .Method }}", "{{ .Path }}", {{ .FuncName }}Handler)
    {{- end }}
}

// GET - /swagger
func SwaggerUIHandler(c *fiber.Ctx) error {
    c.Type("html")
    return c.Send(gogeSwaggerHTML)
}

// GET - /swagger.json
func SwaggerJSONHandler(c *fiber.Ctx) error {
    c.Type("json")
    return c.Send(gogeOpenAPIFileJSON)
}

{{- range .APIs }}
// {{ .Method }} - {{ .Path }}
func {{ .FuncName }}Handler(c *fiber.Ctx) error {
    req := new({{ .ParamsExpr }})
    {{- if .BodyParse }}
    if err := c.BodyParser(req); err != nil {
        return c.Status(fiber.StatusBadRequest).SendString("Invalid request body")
    }
    {{- end }}

    {{- range .Binds }}
    {{- if eq .Kind "header" }}
    {{- if .HasDefault }}
    req.{{ .Name }} = c.Get("{{ .Key }}", {{ .DefaultGoValue }})
    {{- else }}
    req.{{ .Name }} = c.Get("{{ .Key }}")
    {{- end }}
    {{- end }}
    {{- if eq .Kind "query" }}
    {{- if .HasDefault }}
    req.{{ .Name }} = c.{{ .QueryFunc }}("{{ .Key }}", {{ .DefaultGoValue }})
    {{- else }}
    req.{{ .Name }} = c.{{ .QueryFunc }}("{{ .Key }}")
    {{- end }}
    {{- end }}
    {{- if eq .Kind "url" }}
    req.{{ .Name }} = c.Params("{{ .Key }}")
    {{- end }}
    {{- if eq .Kind "cookie" }}
    {{- if .HasDefault }}
    req.{{ .Name }} = c.Cookies("{{ .Key }}", {{ .DefaultGoValue }})
    {{- else }}
    req.{{ .Name }} = c.Cookies("{{ .Key }}")
    {{- end }}
    {{- end }}
    {{- end }}

    res, err := {{ .FuncName }}(c, req)
    if err != nil {
        return err
    }

    {{- if .RespIsBytes }}
    return c.Send(res)
    {{- else }}
    return c.JSON(res)
    {{- end }}
}
{{- end }}

// --- Embedded Swagger assets ---
var (
    gogeSwaggerHTML = []byte(`{{ .SwaggerHTML }}`)
    gogeOpenAPIFileJSON = []byte{ {{ .OpenAPIFileByte }} }
)
